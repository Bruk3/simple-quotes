name: Build and Deploy to GKE
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PROJECT_ID: '${{ secrets.GKE_PROJECT_ID }}'
  GKE_CLUSTER: demo    # Add your cluster name here.
  GKE_ZONE: us-central1  # Add your cluster zone here.
  IMAGE: simple-quotes 
  DEPLOYMENT_NAME: simple-quotes
  # DEPLOY_ENV: dev


jobs:
  build-publish-image:
    name: Build and publish image
    runs-on: ubuntu-latest
    permissions:
        contents: 'read'
        id-token: 'write'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Lint
      - name: Flake8 Code Linter
        uses: jonasrk/flake8-action@master
        with: 
          args: "--max-line-length=100 --exclude .ipython --ignore E266,W503"

      # Authenticate to google cloud
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.4.0'
        with:
          token_format: access_token
          workload_identity_provider: 'projects/925595890819/locations/global/workloadIdentityPools/wi-pool/providers/wi-pool'
          service_account: 'cicd-demo@jkwng-gae-flex3.iam.gserviceaccount.com'


        # This example runs "docker login" directly to Container Registry.
      - run: |-
          echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://gcr.io
      
      # Configure docker
      - run: gcloud --quiet auth configure-docker

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

          docker push gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize


      # Get the GKE credentials so we can deploy to the cluster
      - id: 'get-gke-credentials'
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}


      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
